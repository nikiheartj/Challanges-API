import { type ComponentChildren, type VNode } from "preact";
type MenuContextT = {
    setIsOpened: (isOpened: boolean) => void;
};
export declare const useMenuContext: () => MenuContextT;
export declare const Menu: {
    (props: {
        children: ComponentChildren;
        isInitialOpened?: boolean;
        size?: "s" | "m" | "l" | "xl";
        placement?: "bottom-start" | "bottom-end";
        menuTrigger: (props: {
            onClick: () => void;
            isOpened: boolean;
            setIsOpened: (isOpened: boolean) => void;
        }) => VNode;
        menuTriggerWrapper?: "div" | "span";
    }): import("preact").JSX.Element;
    Section(props: {
        children: ComponentChildren;
    }): import("preact").JSX.Element;
    Item(props: ItemProps): import("preact").JSX.Element;
    ItemWithCheckmark(props: ItemProps & {
        isChecked: boolean;
    }): import("preact").JSX.Element;
};
type ItemProps = {
    children: ComponentChildren;
    onClick?: () => void;
    leadingIcon?: string;
    rightSlot?: ComponentChildren;
    closeMenuOnClick?: boolean;
    ariaLabel?: string;
    setIsOpened?: (isOpened: boolean) => void;
};
export {};
//# sourceMappingURL=index.d.ts.map