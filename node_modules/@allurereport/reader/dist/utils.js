export const isBoolean = (value) => typeof value === "boolean";
export const isString = (value) => typeof value === "string";
export const isArray = (value) => Array.isArray(value);
export const isNonNullObject = (value) => typeof value === "object" && value !== null;
export function ensureBoolean(value, fallback) {
    return isBoolean(value) ? value : fallback;
}
export const ensureInt = (obj) => {
    if (typeof obj === "number") {
        return obj;
    }
    const stringValue = ensureString(obj);
    if (!stringValue) {
        return undefined;
    }
    const parsed = parseInt(stringValue, 10);
    return isNaN(parsed) ? undefined : parsed;
};
export function ensureString(value, fallback) {
    return isString(value) ? value : fallback;
}
export function ensureArray(value, fallback) {
    return isArray(value) ? value : fallback;
}
export function ensureObject(value, fallback) {
    return isNonNullObject(value) ? value : fallback;
}
