import type { AllureStore, QualityGateConfig, QualityGateRulesMeta, QualityGateValidationResult, QualityGateValidator } from "@allurereport/plugin-api";
export declare abstract class AbstractQualityGateValidator implements QualityGateValidator {
    readonly limit: number;
    readonly meta?: QualityGateRulesMeta | undefined;
    constructor(limit: number, meta?: QualityGateRulesMeta | undefined);
    getTestResultsFilteredByMeta(store: AllureStore): Promise<import("@allurereport/core-api").TestResult[]>;
    abstract validate(store: AllureStore): Promise<QualityGateValidationResult>;
}
export declare class MaxFailuresValidator extends AbstractQualityGateValidator {
    validate(store: AllureStore): Promise<QualityGateValidationResult>;
}
export declare class MinTestsCountValidator extends AbstractQualityGateValidator {
    validate(store: AllureStore): Promise<QualityGateValidationResult>;
}
export declare class SuccessRateValidator extends AbstractQualityGateValidator {
    validate(store: AllureStore): Promise<QualityGateValidationResult>;
}
export declare class QualityGate {
    #private;
    readonly config?: QualityGateConfig | undefined;
    result: QualityGateValidationResult[];
    constructor(config?: QualityGateConfig | undefined);
    get exitCode(): 0 | 1;
    validate: (store: AllureStore) => Promise<void>;
}
