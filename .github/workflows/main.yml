# Name workflow
name: pw test

# When launch auto-tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  # Manual hook for launch
  workflow_dispatch:

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  api-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      # Clone the code from repository into runner (virtual machine)
      - uses: actions/checkout@v4
      # Install node js
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      # Install npm
      - name: Install npm
        run: npm i
      # Install PW with dependencies
      - name: Install PW with dependencies
        run: npx playwright install --with-deps
      # Launch auto-tests
      - name: Launch auto-tests
        run: npm test
      # Save playwright-results
      - uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 21
      # Save allure-results
      - uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: allure-results
          path: allure-results
          retention-days: 21
      # Get results of the previous launch
      - uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      # Create allure-report from allure-results
      - uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 21
      # Deploy report to GitHub Pages
      - name: deploy report
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_branch: gh-pages
          publish_dir: allure
      # Compute REPORT_LINK
      - name: Compute REPORT_LINK
        if: always()
        run: |
          # Create URL:
          # https://nikiheartj.github.io/Challenges-API
          echo "REPORT_LINK=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}//allure" >> $GITHUB_ENV
      # Install Java for launching JAR file
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      # Render telegram.json with the secrets
      - name: Render notifications config
        run: |
          mkdir -p notifications/tmp
          sed \
            -e "s|\$TELEGRAM_BOT_TOKEN|${{ secrets.TELEGRAM_BOT_TOKEN }}|g" \
            -e "s|\$TELEGRAM_CHAT_ID|${{ secrets.TELEGRAM_CHAT_ID }}|g" \
            -e "s|\$REPORT_LINK|${REPORT_LINK}|g" \
            notifications/telegram.json > notifications/tmp/telegram.json
      # Send telegram notification via Allure-Notifiaction
      - name: Send Telegram notification
        run: |
          java "-DconfigFile=notifications/tmp/telegram.json" -jar notifications/allure-notifications-4.9.0.jar
